[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ytmoviepicker"
version = "2.0.0"
description = "A robust Flask web application for managing YouTube movie collections"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "YouTube Movie Picker Contributors"}
]
keywords = ["flask", "youtube", "movies", "web-app", "movie-collection"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Flask",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Multimedia :: Video",
]
dependencies = [
    "Flask>=2.3.3",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "beautifulsoup4>=4.12.2",
    "lxml>=4.9.3",
]

[project.urls]
Homepage = "https://github.com/yourusername/YTMoviePicker"
Documentation = "https://github.com/yourusername/YTMoviePicker#readme"
Repository = "https://github.com/yourusername/YTMoviePicker.git"
"Bug Tracker" = "https://github.com/yourusername/YTMoviePicker/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "flake8>=6.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "pylint>=2.17.0",
    "pre-commit>=3.3.0",
    "bandit[toml]>=1.7.5",
    "mypy>=1.5.0",
]

[tool.black]
line-length = 127
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | \.tox
  | \.pytest_cache
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 127
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 127
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", ".venv", ".tox", "build", "dist"]

[tool.pylint.messages_control]
disable = ["C0114", "C0116", "R0903"]

[tool.bandit]
exclude_dirs = ["tests", ".venv", ".tox"]
skips = ["B101"]  # Skip assert_used test

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = [".venv", "tests"]
